Traditional development process vs Behavioral Driven Develpment
------------------------------------------------

Company --> Project (Client)

SDLC  --> End to end process of creation of sotware

WaterFall, V-V, Iterative and Agile

TDD:-

> Stack holder --> Tells --> Requirement --> PO/BA

> PO/BA --> Requirement --> Recived from SH --> DOCS (BRS/SRS/HLD/LLD) --> US

> Dev --> Code

> Tester (Qa) --> Write Manual test cases

> Finish the product

> Technical writer --> He will prepare documentation --> Confluence page.

BDD:-

> SH + PO/BA (Collarboation)

> PO/BA + Dev + QA  (3 Amigos)

> Agreed upon the requirements which should be defined as English formatted scenarios.

Given When And Then But So (Gherkin DSL)

Why?
What?
How?

Exampes

Requirements

> Dev --> write the code based on Scenarios
> QA- > Write the manual test cases based on Scenarios

> Automation Testing --> (Scenarios) --> Write Scripts (Cucumber / Jbehave / SpecFlow)

> Finish the product

> TW --> Docs

------------------->

Hybrid

---------------------------------->
Test driven development vs Behavioral Driven development (TDD vs BDD)?
-------------------------------------------------
TDD:-

Devlopment centric approach

Developer (Test cases) --> Unit test cases.

--> Whitebox testing

Product (
Amazon) --> Developer (Code)

Dev --> Code (Write test cases)

Dev --> Code -->Muliple Java File --> WAR (Maven/Ant/Gradle) --> Deploy --> 
Tom cat --> APP --> QA --> Test cases --> Against App --> Bug --> Dev 

Junit , TestNG , Nunit, Pyunit

US --> HLR --> Test cases (Dev/QA) --> Execute --> FAILED --> Development Code

--> Rreun --> Failed --> Refactor --> Pass --> Cycles goes

BDD:-
----------

Scenarios (3 amigos) -->Execute --> Fail --> Code --> Exe --> Fail --> Refactor 

--> Execute --> Pass --> Cycles goes on


1. TDD vs BDD

2. Cucumber Initial Setup --> Maven --> Pom.xml

	> Feature File
	> Step defintion

3. Runner Class --> Junit (features, glue, dryRun, plugin, monochrome, tags) 

--------------------------------------

Data driven testing in Cucumber:-
-------------------------------

Data Driven Testing:-
------------------

Testing:- 

Scenarios --> Dev

	 --> Scenario's(Expected value) vs Product (Actual value)
	--> Bug --> Quality

An application(Eg Amazon login) is driven by external resources such as XML, Json, Excel or DB.

A framework which supports to acheive the data driven testing is called as 
Data driven framework:

Eg: Cucumber, TestNG

How to acheive data driven framework through Cucumber?
---------------------------------------------------

1. Simple Data driven (Using Cucumber expression or Reqular Exp)
2. DataTable Class
3. Scenario Outline with Examples

-------------------

***** DataTable Class

asList() --> Single Column with Multiple Rows --> List<String>
values() --> Single Row with Multiple Columns/Single Column with Multiple Rows --> List<String>
asMap() --> Headers with Single set of data --> Map<String, String>
asLists() --> Multiple Set of data without header --> List<List<String>>
cells() --> Multiple Set of data without header --> List<List<String>>
asMaps() --> Multiple set of data with header --> List<Map<K,V>
entries() --> Multiple set of data with header --> List<Map<K,V>

> Datatable is a class used to acheive the data driven testing in Cucumber
> Datatable is used to convert the data from table to List or Map.
> Different inbuilded methods --> asList, asLists, asMap, asMaps










































Cucumber:-
--------------